/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$social-002-round-dribbble-name: 'social-002-round_dribbble';
$social-002-round-dribbble-x: 0px;
$social-002-round-dribbble-y: 0px;
$social-002-round-dribbble-offset-x: 0px;
$social-002-round-dribbble-offset-y: 0px;
$social-002-round-dribbble-width: 16px;
$social-002-round-dribbble-height: 16px;
$social-002-round-dribbble-total-width: 196px;
$social-002-round-dribbble-total-height: 16px;
$social-002-round-dribbble-image: 'sprite.png';
$social-002-round-dribbble: (0px, 0px, 0px, 0px, 16px, 16px, 196px, 16px, 'sprite.png', 'social-002-round_dribbble', );
$social-002-dribbble-name: 'social-002_dribbble';
$social-002-dribbble-x: 36px;
$social-002-dribbble-y: 0px;
$social-002-dribbble-offset-x: -36px;
$social-002-dribbble-offset-y: 0px;
$social-002-dribbble-width: 16px;
$social-002-dribbble-height: 16px;
$social-002-dribbble-total-width: 196px;
$social-002-dribbble-total-height: 16px;
$social-002-dribbble-image: 'sprite.png';
$social-002-dribbble: (36px, 0px, -36px, 0px, 16px, 16px, 196px, 16px, 'sprite.png', 'social-002_dribbble', );
$social-003-round-twitter-name: 'social-003-round_twitter';
$social-003-round-twitter-x: 72px;
$social-003-round-twitter-y: 0px;
$social-003-round-twitter-offset-x: -72px;
$social-003-round-twitter-offset-y: 0px;
$social-003-round-twitter-width: 16px;
$social-003-round-twitter-height: 16px;
$social-003-round-twitter-total-width: 196px;
$social-003-round-twitter-total-height: 16px;
$social-003-round-twitter-image: 'sprite.png';
$social-003-round-twitter: (72px, 0px, -72px, 0px, 16px, 16px, 196px, 16px, 'sprite.png', 'social-003-round_twitter', );
$social-003-twitter-name: 'social-003_twitter';
$social-003-twitter-x: 108px;
$social-003-twitter-y: 0px;
$social-003-twitter-offset-x: -108px;
$social-003-twitter-offset-y: 0px;
$social-003-twitter-width: 16px;
$social-003-twitter-height: 16px;
$social-003-twitter-total-width: 196px;
$social-003-twitter-total-height: 16px;
$social-003-twitter-image: 'sprite.png';
$social-003-twitter: (108px, 0px, -108px, 0px, 16px, 16px, 196px, 16px, 'sprite.png', 'social-003_twitter', );
$social-004-round-flickr-name: 'social-004-round_flickr';
$social-004-round-flickr-x: 144px;
$social-004-round-flickr-y: 0px;
$social-004-round-flickr-offset-x: -144px;
$social-004-round-flickr-offset-y: 0px;
$social-004-round-flickr-width: 16px;
$social-004-round-flickr-height: 16px;
$social-004-round-flickr-total-width: 196px;
$social-004-round-flickr-total-height: 16px;
$social-004-round-flickr-image: 'sprite.png';
$social-004-round-flickr: (144px, 0px, -144px, 0px, 16px, 16px, 196px, 16px, 'sprite.png', 'social-004-round_flickr', );
$social-004-flickr-name: 'social-004_flickr';
$social-004-flickr-x: 180px;
$social-004-flickr-y: 0px;
$social-004-flickr-offset-x: -180px;
$social-004-flickr-offset-y: 0px;
$social-004-flickr-width: 16px;
$social-004-flickr-height: 16px;
$social-004-flickr-total-width: 196px;
$social-004-flickr-total-height: 16px;
$social-004-flickr-image: 'sprite.png';
$social-004-flickr: (180px, 0px, -180px, 0px, 16px, 16px, 196px, 16px, 'sprite.png', 'social-004_flickr', );
$spritesheet-width: 196px;
$spritesheet-height: 16px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($social-002-round-dribbble, $social-002-dribbble, $social-003-round-twitter, $social-003-twitter, $social-004-round-flickr, $social-004-flickr, );
$spritesheet: (196px, 16px, 'sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
